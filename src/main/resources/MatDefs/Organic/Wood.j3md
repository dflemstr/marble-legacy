MaterialDef Wood {
    MaterialParameters {
        Texture2D WoodGradient

        Color Ambient (MaterialAmbient)
        Color Diffuse (MaterialDiffuse)
        Color Specular (MaterialSpecular)
        Float Shininess (MaterialShininess) : 1

        Float DistanceWeight : 4.0
        Float NoiseScale : 0.6
        Float NoiseWeight : 1.5
        Float Roughness : 0.3
        Vector3 TrunkCenter1 : 0.2994	0.7161	0.9683
        Vector3 TrunkCenter2 : 0.9274	0.4385	0.5053
        Vector3 NoiseSeed : 217.0 165.0 162.0
        Float Variation : 0.4
    }

    Technique {
        LightMode SinglePass
        VertexShader   GLSL100: Shaders/Organic/Wood.vert
        FragmentShader GLSL100: Shaders/Organic/Wood.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            WorldMatrix
            ViewMatrix
            NormalMatrix
        }

        Defines {
            NUM_LIGHTS : NumLights

            AMBIENT : Ambient
            DIFFUSE : Diffuse
            SPECULAR : Specular
        }
    }

    Technique PreShadow {

        VertexShader GLSL100 :   Common/MatDefs/Shadow/PreShadow.vert
        FragmentShader GLSL100 : Common/MatDefs/Shadow/PreShadow.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
        }

        Defines {
            DIFFUSEMAP_ALPHA : DiffuseMap
        }

        RenderState {
            FaceCull Off
            DepthTest On
            DepthWrite On
            PolyOffset 5 0
            ColorWrite Off
        }

    }

    Technique PreNormalPass {

        VertexShader GLSL100 :   Common/MatDefs/SSAO/normal.vert
        FragmentShader GLSL100 : Common/MatDefs/SSAO/normal.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            NormalMatrix
        }

        Defines {
            DIFFUSEMAP_ALPHA : DiffuseMap
        }

        RenderState {

        }

    }

    Technique GBuf {

        VertexShader GLSL100:   Common/MatDefs/Light/GBuf.vert
        FragmentShader GLSL100: Common/MatDefs/Light/GBuf.frag

        WorldParameters {
            WorldViewProjectionMatrix
            NormalMatrix
            WorldViewMatrix
            WorldMatrix
        }

        Defines {
            VERTEX_COLOR : UseVertexColor
            MATERIAL_COLORS : UseMaterialColors
            V_TANGENT : VTangent
            MINNAERT  : Minnaert
            WARDISO   : WardIso

            DIFFUSEMAP : DiffuseMap
            NORMALMAP : NormalMap
            SPECULARMAP : SpecularMap
            PARALLAXMAP : ParallaxMap
        }
    }

    Technique FixedFunc {
        LightMode FixedPipeline
    }

    Technique Glow {

        VertexShader GLSL100:   Common/MatDefs/Misc/SimpleTextured.vert
        FragmentShader GLSL100: Common/MatDefs/Light/Glow.frag

        WorldParameters {
            WorldViewProjectionMatrix
        }

        Defines {
            HAS_GLOWMAP : GlowMap
            HAS_GLOWCOLOR : GlowColor
        }
    }
}
